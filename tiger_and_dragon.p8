pico-8 cartridge // http://www.pico-8.com
version 41
__lua__
-- tiger_and_dragon
-- by jesse jurman & tina howard

title_menu_options = {
  "start",
  "rules",
  "about",
  "controls"
}

function _init()
  map_state = 0 -- title screen
  menu_state = 1 -- menu option selected

  set_sr_text("tiger & dragon, an accessible experimental port, created by jesse jurman and tina howard. menu with 4 items, start selected, use up and down to move, or press x to select")
end

function _update()
  if (map_state == 0) then
    handle_title_updates()
  elseif (map_state == 1) then
    handle_game_updates()
  elseif (map_state == 2) then
    handle_rules_updates()
  elseif (map_state == 3) then
    handle_about_updates()
  elseif (map_state == 4) then
    handle_controls_updates()
  end

  update_sr()
  handle_pause_sr()
end

function _draw()
  cls()

  if (map_state == 0) then
    draw_title_screen()
  elseif (map_state == 1) then
    draw_game_screen()
  elseif (map_state == 2) then
  		draw_rules_screen()
  elseif (map_state == 3) then
  		draw_about_screen()
  elseif (map_state == 4) then
  		draw_controls_screen()
  end
end
-->8
-- pico-8 a11y template

-- this file contains functions
-- to interface with a webpage
-- and present text for screen
-- readers.
-- read more at https://github.com/jrjurman/pico-a11y-template

-- gpio addresses
a11y_start = 0x5f80
a11y_page_size = 128 - 4
a11y_end  = a11y_start + a11y_page_size
-- has the window read the page? 0 or 1
a11y_read = a11y_end + 1
-- what page are we on?
a11y_page = a11y_end + 2
-- what is the last page?
a11y_last = a11y_end + 3

-- full text to read out
a11y_text = ""

-- update screen reader function
-- this should be called at the
-- end of your update function
function update_sr()
  -- get current page
  local has_read_page = peek(a11y_read) == 1
  local page = peek(a11y_page)
  local last_page = peek(a11y_last)

  -- if we have read this page (and there are more)
  -- reset the read counter, and update the page
  if (has_read_page and page < last_page) then
    page = page + 1
    poke(a11y_read, 0)
    poke(a11y_page, page)
  end

  if (page <= last_page) then
   -- clear previous text
   for i = a11y_start,a11y_end do
     poke(i, 0)
   end

	  -- load the text for this page
	  local text_start = a11y_page_size * page
	  local text_end = a11y_page_size * (page + 1)
	  for i = 1, a11y_page_size do
	    local char = ord(a11y_text, i + text_start)
	    local addr = a11y_start + i
	    poke(addr, char)
	  end
  end
end

function set_sr_text(text)
  -- set text and page variables
  a11y_text = text
  local page_size = (#text/a11y_page_size)

  -- reset counters and set values
  poke(a11y_read, 0)
  poke(a11y_page, 0)
  poke(a11y_last, page_size)

		-- run update_sr to populate the text
  update_sr()
end

-- handle pause button
-- since this menu is not accessible
pre_paused_text = ""
function handle_pause_sr()
  -- first, check if we have pre_paused_text
  -- this is the text before pausing
  -- this will also be true right after pause menu is closed
  if (pre_paused_text != "") then
    set_sr_text(pre_paused_text)
    pre_paused_text = ""
  end

  -- then, if we just paused, update the menu text
  -- and save the existing a11y text (to load later)
  if (btn(6)) then
    pre_paused_text = a11y_text
    set_sr_text("you've entered the pause menu, read out is not available yet, press p or enter to leave")
  end
end
-->8
-- title screen

-- handle updates on title screen
function handle_title_updates()
  if (btnp(‚ùé) or btnp(üÖæÔ∏è)) then
    map_state = menu_state

    if (map_state == 1) init_game_screen()
    if (map_state == 2) init_rules_screen()
    if (map_state == 3) init_about_screen()
    if (map_state == 4) init_controls_screen()
  end

  -- handle menu navigation
  if (btnp(‚¨áÔ∏è)) then
    new_option = ((menu_state+0)%4) + 1
    update_menu_state(new_option)
  end
  if (btnp(‚¨ÜÔ∏è)) then
    new_option = ((menu_state-2)%4) + 1
    update_menu_state(new_option)
  end
end

-- update and read menu state
function update_menu_state(new_option)
  menu_state = new_option
  menu_text = title_menu_options[new_option]

  set_sr_text(menu_text .. " menu item selected")
end

-- draw title screen
function draw_title_screen()
  map()

  -- draw title text
  print("tiger &", 50, 20, 0)
  print("dragon ", 50, 26, 0)
  -- print("a11y pico-8 port", 45, 32, 0)

  -- draw title options
  for i=1, #title_menu_options do
    draw_menu_option(i, title_menu_options[i])
  end
end

function draw_menu_option(i, text, selected)
  local opt_h = 10 -- height
  local opt_w = 38 -- width
  local x = 48
  local y = 68+(i*(opt_h + 2))

  local selected = menu_state == i

  -- determine color based on menu_state
  local c = selected and 7 or 0

  -- draw rect
  rect(x, y, x + opt_w, y + opt_h, c)

  -- print text
  print(text, x + 4, y + 3, c)
end
-->8
-- about screen

about_text_blocks = {
[[ you are a kung-fu master,
trading blows with the school
of the "tiger" and the school
of the "dragon". defend against
your opponent's attacks to turn
the tables and launch an attack
of  your own. ]],
[[this is a digital port of the
"tiger and dragon" game
published by oink games and
archlight games. ]],
[[this is an experiment in
building an accessible game in
pico-8, using pico-a11y-template
, created by jesse jurman and
tina howard. ]],
[[for the full experience, we
recommend checking out the
official board game!]]
}

about_scroll_offset = 0

function init_about_screen()
  set_sr_text(
    "about page, press x to return to main menu" ..
    about_text_blocks[1] ..
    about_text_blocks[2] ..
    about_text_blocks[3] ..
    about_text_blocks[4]
  )
end

function handle_about_updates()
  if (btnp(‚ùé) or btnp(üÖæÔ∏è)) then
    map_state = 0
    set_sr_text("back to main menu, about selected")
  end

  -- handle scrolling
  if (btnp(‚¨áÔ∏è) and about_scroll_offset > -40) then
    about_scroll_offset = about_scroll_offset - 6
  end
  if (btnp(‚¨ÜÔ∏è) and about_scroll_offset < 0) then
    about_scroll_offset = about_scroll_offset + 6
  end
end

-- draw about screen
function draw_about_screen()
  local current_line = 1
  for text_block=1, #about_text_blocks do
    local about_lines = wrap_text(about_text_blocks[text_block])

    for line_idx = 1, #about_lines do
      current_line = current_line + 1
  		  print(about_lines[line_idx], 11, 0 + about_scroll_offset + (6*current_line), 7)
    end

    current_line = current_line + 1
  end

  map(16, 0)
end
-->8
-- text functions for about pages

function is_break(char)
  local char_code = ord(char)
  return char_code == 32 or char_code == 10 or char_code == 9
end

char_limit = 27

-- wrap text function
function wrap_text(text)
		local words = {""}
		for i=1, #text do
				local len_last_word = #words[#words]
				if is_break(text[i]) and len_last_word > 0 then
						-- create the next word
						words[#words + 1] = ""
				elseif not is_break(text[i]) then
						-- append letter to current word
						words[#words] = words[#words] .. text[i]
				end
		end
		local lines = {words[1]}
		for word_idx=2, #words do
		  -- check if adding this word would put us over
    local new_len = #lines[#lines] + #words[word_idx]
    if new_len < char_limit then
      lines[#lines] = lines[#lines] .. " " .. words[word_idx]
    else
      lines[#lines + 1] = words[word_idx]
    end
		end
		return lines
end
-->8
-- rules screen

rule_text_blocks = {
[[ at the start of the game you
and your opponent will draw 13
tiles. the player going first
draws an extra tile. ]],
[[ the first player chooses one
tile to start the attack. the
next player can play a matching
tile, or pass. the tiger matches
all even valued tiles, and the
dragon matches all odd valued
tiles. ]],
[[ if the player has a matching
tile, they can play that tile
and then start their own attack,
placing any tile they want. if
they pass or do not have a
matching tile, the attacking
player chooses any tile to put
face down on their board. ]],
[[ the player who places all of
their tiles first wins the round.
]]
}

rule_scroll_offset = 0

function init_rules_screen()
  set_sr_text(
    "rules page, press x to return to main menu" ..
    rule_text_blocks[1] ..
    rule_text_blocks[2] ..
    rule_text_blocks[3] ..
    rule_text_blocks[4]
  )
end

function handle_rules_updates()
  if (btnp(‚ùé) or btnp(üÖæÔ∏è)) then
    map_state = 0
    set_sr_text("back to main menu, rules selected")
  end

  -- handle scrolling
  if (btnp(‚¨áÔ∏è) and rule_scroll_offset > -70) then
    rule_scroll_offset = rule_scroll_offset - 6
  end
  if (btnp(‚¨ÜÔ∏è) and rule_scroll_offset < 0) then
    rule_scroll_offset = rule_scroll_offset + 6
  end
end

-- draw rules screen
function draw_rules_screen()
  local current_line = 1
  for text_block=1, #rule_text_blocks do
    local rule_lines = wrap_text(rule_text_blocks[text_block])

    for line_idx = 1, #rule_lines do
      current_line = current_line + 1
  		  print(rule_lines[line_idx], 11, 0 + rule_scroll_offset + (6*current_line), 7)
    end

    current_line = current_line + 1
  end

  map(16, 0)
end
-->8
-- controls screen

control_text_blocks = {
[[ up / down - move between
score, boards, tiles ]],
[[ left / right - change tile
selection ]],
[[ x (x on keyboard) - select a 
tile ]],
[[ o (z on keyboard) - pass ]],
}

control_scroll_offset = 0

function init_controls_screen()
  set_sr_text(
    "controls page, press x to return to main menu" ..
    control_text_blocks[1] ..
    control_text_blocks[2] ..
    control_text_blocks[3] ..
    control_text_blocks[4]
  )
end

function handle_controls_updates()
  if (btnp(‚ùé) or btnp(üÖæÔ∏è)) then
    map_state = 0
    set_sr_text("back to main menu, controls selected")
  end

  -- handle scrolling
  if (btnp(‚¨áÔ∏è) and control_scroll_offset > 0) then
    control_scroll_offset = control_scroll_offset - 6
  end
  if (btnp(‚¨ÜÔ∏è) and control_scroll_offset < 0) then
    control_scroll_offset = control_scroll_offset + 6
  end
end

-- draw controls screen
function draw_controls_screen()
  local current_line = 1
  for text_block=1, #control_text_blocks do
    local control_lines = wrap_text(control_text_blocks[text_block])

    for line_idx = 1, #control_lines do
      current_line = current_line + 1
  		  print(control_lines[line_idx], 11, 0 + control_scroll_offset + (6*current_line), 7)
    end

    current_line = current_line + 1
  end

  map(16, 0)
end
-->8
-- game screen

tile_pool = {
  1,
  2,2,
  3,3,3,
  4,4,4,4,
  5,5,5,5,5,
  6,6,6,6,6,6,
  7,7,7,7,7,7,7,
  8,8,8,8,8,8,8,8,
  9,10 -- tiger and dragon
}

plr_board = {}
cpu_board = {}

first_player = 0
cpu_tiles = {}
plr_tiles = {}
selected_tile = 1
selected_panel = 4

function init_game_screen()
  -- setup the game state
  init_game_state()
  -- set the screen reader text
end

function handle_game_updates()
  if (btnp(‚ùé) or btnp(üÖæÔ∏è)) then
    map_state = 0
    set_sr_text("back to main menu, about selected")
  end
  if (btnp(‚û°Ô∏è)) then
    selected_tile = (selected_tile) % #plr_tiles + 1
  end
  if (btnp(‚¨ÖÔ∏è)) then
    selected_tile = (selected_tile - 2) % #plr_tiles + 1
  end
  if (btnp(‚¨ÜÔ∏è)) then
    selected_panel = (selected_panel - 2) % 4 + 1
  end
  if (btnp(‚¨áÔ∏è)) then
    selected_panel = (selected_panel) % 4 + 1

  end
end

function draw_game_screen()
  map(32,0)
  spr(78,11,67,3,3)
  spr(78,92,39,3,3,true,true)
  draw_plr_tiles()
  draw_cpu_tiles()
  draw_tile_cursor()
  draw_board_cursor()
  draw_cpu_cursor()
  draw_cpu_board()
end

function give_tiles(hand)
  local tile_idx = ceil(rnd(#tile_pool))
  local tile = deli(tile_pool,tile_idx)
  add(hand,tile)
end

function init_game_state()
  first_player = flr(rnd(2))
  -- give each player 13 tiles
  local cpu_limit = first_player == 0 and 14 or 13
  local plr_limit = first_player == 1 and 14 or 13
  for i=1,cpu_limit do
    give_tiles(cpu_tiles)
  end
  for i=1,plr_limit do
    give_tiles(plr_tiles)
  end
  
  -- sort the players hand
  qsort(plr_tiles) 
  
  -- add tile to board based on first player
  if first_player == 0 then
    add(plr_board, nil)
    place_tile(cpu_tiles, cpu_board, 1)
  else
    add(cpu_board, nil)
  end
end

-- this for the tiles on the board to be scaled
function draw_cpu_board()
  for i=1,#cpu_board do
    local tile = cpu_board[i]
    sspr(tile*8, 0,
      8,8, --width, height
      93,46, -- x,y
      16,16 -- stretched width, height 
    )
  end
end

function draw_plr_tiles()
  for i=1,#plr_tiles do
    local tile = plr_tiles[i]
    spr(tile, 0.5+(8*i), 108)
  end
end

function draw_cpu_tiles()
  for i=1,#cpu_tiles do
    local tile = 11
    spr(tile, 0.5+(8*i), 12)
  end
end

function draw_tile_cursor()
  if selected_panel != 4 then
    return
  end
  rect(
    0.5+(8*selected_tile), 107, 
    7.5+(8*selected_tile), 116,
    11)
end

function draw_board_cursor()
  if selected_panel != 3 and selected_panel != 2 then
    return
  end
  rect(
    9, -55+(40*selected_panel), 
    109, -14+(39*selected_panel),
    11)
end

function draw_cpu_cursor()
  if selected_panel != 1 then
    return
  end
  rect(8, 11, 119, 20, 11)
end

function place_tile(tiles, board, idx)
  local tile = deli(tiles,idx)
  add(board,tile)
end




-->8
-- qsort, from code snippets

-- qsort(a,c,l,r)
--
-- a
--    array to be sorted,
--    in-place
-- c
--    comparator function(a,b)
--    (default=return a<b)
-- l
--    first index to be sorted
--    (default=1)
-- r
--    last index to be sorted
--    (default=#a)
--
-- typical usage:
--   qsort(array)
--   -- custom descending sort
--   qsort(array,function(a,b) return a>b end)
--
function qsort(a,c,l,r)
	c,l,r=c or function(a,b) return a<b end,l or 1,r or #a
	if l<r then
		if c(a[r],a[l]) then
			a[l],a[r]=a[r],a[l]
		end
		local lp,k,rp,p,q=l+1,l+1,r-1,a[l],a[r]
		while k<=rp do
			local swaplp=c(a[k],p)
			-- "if a or b then else"
			-- saves a token versus
			-- "if not (a or b) then"
			if swaplp or c(a[k],q) then
			else
				while c(q,a[rp]) and k<rp do
					rp-=1
				end
				a[k],a[rp],swaplp=a[rp],a[k],c(a[rp],p)
				rp-=1
			end
			if swaplp then
				a[k],a[lp]=a[lp],a[k]
				lp+=1
			end
			k+=1
		end
		lp-=1
		rp+=1
		-- sometimes lp==rp, so 
		-- these two lines *must*
		-- occur in sequence;
		-- don't combine them to
		-- save a token!
		a[l],a[lp]=a[lp],a[l]
		a[r],a[rp]=a[rp],a[r]
		qsort(a,c,l,lp-1       )
		qsort(a,c,  lp+1,rp-1  )
		qsort(a,c,       rp+1,r)
	end
end
__gfx__
00000000077777700777777007777770077777700777777007777770077777700777777007777770077777700777777000000000000000000000000000000000
000000000788877007cccc700788887007c77c700788887007cccc700788887007cccc700788887007cccc700777777000666666666666666666666666666000
007007000777877007c77c700787787007c77c700787777007c77c700787787007c77c700787887007cc7c700777777006777777600000060000006000000600
000770000777877007777c700777787007c77c700787777007c777700777787007c77c700788787007c7cc700777777006777777600000060000006000000600
000770000777877007cccc700778887007cccc700788887007cccc700777787007cccc700787887007cc7c700777777006778777600000060000006000000600
007007000777877007c777700777787007777c700777787007c77c700777787007c77c700788787007c7cc700777777006788787600000060000006000000600
000000000788887007cccc700788887007777c700788887007cccc700777787007cccc700788887007cccc700777777006788887600000060000006000000600
00000000077777700777777007777770077777700777777007777770077777700777777007777770077777700777777006788887600000060000006000000600
88888888cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000006778877600000060000006000000600
88888888cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000006777777600000060000006000000600
88888888cccccccc6666666600000000000000000000000000000000000000000000000000000000000000000000000006777776000000600000060000000600
88888888cccccccc6666666600000000000000000000000000000000000000000000000000000000000000000000000006666660066666006666600666666600
88888888cccccccc6666666600000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
88888888cccccccc6666666600000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
88888888cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
88888888cccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000600000060000006000000600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000666666666666666666666666666000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000777777777777000
00000666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666000000000000000777777777777000
00006666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666600000000000000777777877777000
00066000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000660000000000000777778887777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000777778887777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000777788887777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000778888887777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000778888877777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000788888777787000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000788888877887000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000788888888887000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000788888888887000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000778888888877000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000778888888877000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000777788887777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000777777777777000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000066000000000000660000000000006600000000000066000000000006600000000000066000000000000066000000000000000000000000000
00666666666666660006666666666600066666666666000666666666660006666666666000666666666660006666666666666000000000000000000000000000
00666666666666600066666666666000666666666660006666666666600066666666660006666666666600066666666666666000000000000000000000000000
00660000000000000660000000000006600000000000066000000000000660000000000066000000000000660000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00660000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000066000000000000000000000000000
00066000000000006600000000000066000000000000660000000000006600000000000660000000000006600000000000660000000000000000000000000000
00006666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666600000000000000000000000000000
00000666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666000000000000000000000000000000
__label__
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
88888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccc888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc8888888888888888888888888888888888888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc88888888888888888888888888888888
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

__map__
1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010000000000000000000000000000010100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010000000000000000000000000000010100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101010101010101010101010101000000000000000000000000000001010404142434445464748494a4b4c4d100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101010101010101010101010101000000000000000000000000000001010505152535455565758595a5d5c5d100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101010101010101010101010101000000000000000000000000000001010606162636465666768696a6b6c6d100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
101010101010101010101010101010101000000000000000000000000000001010707172737475767778797a7d7c7f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111010101010101010101010101100000000000000000000000000001011808182838485868788898a8b8c8f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111111111110101010101010101100000000000000000000000000001011404142434445464748494a4b4c9f100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111111111111111111101010101100000000000000000000000000001011505152535455565758595a5d5c00100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111111111111111111111111111100000000000000000000000000001111606162636465666768696a6b6c00110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111111111111111111111111111100000000000000000000000000001111707172737475767778797a7d7c00110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
111111111111111111111111111111111100000000000000000000000000001111808182838485868788898a8b8c00110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111000000000000000000000000000011110000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111000000000000000000000000000011110000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
